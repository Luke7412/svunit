`ifdef RUN_SVUNIT_WITH_UVM
  import uvm_pkg::*;
`endif

module {{test_runner.class_name}}();
  import svunit_pkg::svunit_testrunner;
`ifdef RUN_SVUNIT_WITH_UVM
  import svunit_uvm_mock_pkg::svunit_uvm_test_inst;
  import svunit_uvm_mock_pkg::uvm_report_mock;
`endif
  string name = "{{test_runner.instance_name}}";
  svunit_testrunner svunit_tr;


  //==================================
  // These are the test suites that we
  // want included in this testrunner
  //==================================
  {% for test_suite in test_suites %}
  {{test_suite.class_name}} {{test_suite.instance_name}}();
  {%- endfor %}


  //===================================
  // Main
  //===================================
  initial
  begin

    `ifdef RUN_SVUNIT_WITH_UVM_REPORT_MOCK
      uvm_report_cb::add(null, uvm_report_mock::reports);
    `endif

    build();

    `ifdef RUN_SVUNIT_WITH_UVM
      svunit_uvm_test_inst("svunit_uvm_test");
    `endif

    run();
    $finish();
  end


  //===================================
  // Build
  //===================================
  function void build();
    svunit_tr = new(name);
    {% for test_suite in test_suites %}
    {{test_suite.instance_name}}.build();
    svunit_tr.add_testsuite({{test_suite.instance_name}}.svunit_ts);
    {% endfor %}
  endfunction


  //===================================
  // Run
  //===================================
  task run();
    {%- for test_suite in test_suites %}
    {{test_suite.instance_name}}.run();
    {%- endfor %}

    svunit_tr.report();
  endtask

endmodule
