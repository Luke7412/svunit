
`include "svunit_defines.svh"
{%- if uvm_test %}
import uvm_pkg::*;
import svunit_uvm_mock_pkg::*;
 {%- endif %}


module {{uut}}_unit_test;
  import svunit_pkg::svunit_testcase;
  
  string name = "{{uut}}_ut";
  svunit_testcase svunit_ut;
  
  //---------------------------------------------------------------------------
  // This is the UUT that we're running the Unit Tests on
  {%- if uvm_test %}
  {{uvm_class_name}} my_{{uut}}{{'' if processing_class else '()'}};
  {%- else %}
  {{uut}} my_{{uut}};
  {%- endif %}


  //===================================
  // Build
  //===================================
  function void build();
    svunit_ut = new(name);
  {%- if processing_class %}
    {%- if uvm_test %}
    my_{{uut}} = {{uvm_class_name}}::type_id::create("", null);
    svunit_deactivate_uvm_component(my_{{uut}});
    {%- else %}
    my_{{uut}} = new(/* New arguments if needed */);
    {%- endif %}
  {%- endif %}
  endfunction


  //===================================
  // Setup for running the Unit Tests
  //===================================
  task setup();
    svunit_ut.setup();
    // Place Setup Code Here
  {%- if uvm_test %}
    svunit_activate_uvm_component(my_{{uut}});
    //-----------------------------
    // start the testing phase
    //-----------------------------
    svunit_uvm_test_start();
  {%- endif %}
  endtask


  //===================================
  // Here we deconstruct anything we
  // need after running the Unit Tests
  //===================================
  task teardown();
    svunit_ut.teardown();
  {%- if uvm_test %}
    //-----------------------------
    // terminate the testing phase 
    //-----------------------------
    svunit_uvm_test_finish();
  {%- endif %}
    // Place Teardown Code Here
  {%- if uvm_test %}
    svunit_deactivate_uvm_component(my_{{uut}});
  {%- endif %}
  endtask


  //===================================
  // All tests are defined between the
  // SVUNIT_TESTS_BEGIN/END macros
  //\n";
  // Each individual test must be
  // defined between `SVTEST(_NAME_)
  // `SVTEST_END
  //
  // i.e.
  //   `SVTEST(mytest)
  //     <test code>
  //   `SVTEST_END
  //===================================
  `SVUNIT_TESTS_BEGIN



  `SVUNIT_TESTS_END

endmodule
